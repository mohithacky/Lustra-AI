rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own user document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;

      // Rules for subcollections within a user's document
      match /templates/{templateId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == userId;
        allow update: if request.auth.uid == userId || (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likedBy', 'useCount']));
        allow delete: if request.auth.uid == userId;
      }

      match /collections/{collectionId} {
        allow read, create, update, delete: if request.auth.uid == userId;
      }

      match /categories/{categoryId} {
        allow read, create, update, delete: if request.auth.uid == userId;
      }
    }

    // Reels are public to all authenticated users, but you can only create your own.
    match /reels/{reelId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.authorUid;
      allow update, delete: if request.auth.uid == resource.data.authorUid;
    }

    // This is for the collection group query `getTemplatesForType`.
    // It allows any authenticated user to read from any of the template subcollections.
    match /{path=**}/PhotoShoot/{templateId} {
      allow read: if request.auth != null;
    }
    match /{path=**}/AdShoot/{templateId} {
      allow read: if request.auth != null;
    }
    match /{path=**}/ProductShoot/{templateId} {
      allow read: if request.auth != null;
    }
  }
}
